pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
-- constants
local screen_width = 128
local screen_height = 128

-- game variables
local charlie = {
    x = 20,
    y = 110,
    width = 16,
    height = 16,
    jumping = false,
    jumpspeed = -4,
    gravity = 0.2,
    sprite = 22,
    speed = 1.5
}

local camera = {
    x = 0
}

local hoops = {}

-- define a function to create a hoop object with x, y, width, height
function createhoop(x, y)
    return {
        x = x,
        y = y,
        width = 8,
        height = 8
    }
end

local hoopspeed = 0.5
local hoopinterval = 60
local hooptimer = hoopinterval

local score = 0
local lives = 3
local gamestate = "title"  -- "title", "liongame", "gameover"

-- sprites
local sprites = {
    { -- charlie (lion)
        id = 1
    },
    { -- charlie
        id = 2
    },
    { -- flaming hoop
        id = 3
    }
}

-- background variables
local bg_scroll = 0
local bg_speed = 1

-- game initialization
function _init()
    initgame()
end

function initgame()
    charlie.x = 20
    charlie.y = 110
    score = 0
    lives = 3
    gamestate = "title"
    hoops = {}
    bg_scroll = 0
    add(hoops, createhoop(128, 100))  -- initial hoop
end

-- collision detection function
function checkcollision(obj1, obj2)
    return obj1.x < obj2.x + obj2.width and
           obj1.x + obj1.width > obj2.x and
           obj1.y < obj2.y + obj2.height and
           obj1.y + obj1.height > obj2.y
end

-- update function
function _update()
    if gamestate == "title" then
        updatetitlescreen()
    elseif gamestate == "liongame" then
        updateliongame()
    elseif gamestate == "gameover" then
        updategameoverscreen()
    end
end

function updatetitlescreen()
    if btnp(4) then  -- z key
        gamestate = "liongame"
    end
end

function initliongame()

end

function updateliongame()
    -- charlie controls
    if btn(0) then  -- left arrow key
        charlie.x = charlie.x - charlie.speed
    elseif btn(1) then  -- right arrow key
        charlie.x = charlie.x + charlie.speed
    end

   -- charlie jumping
    if btnp(4) and not charlie.jumping then  -- z key
        charlie.jumping = true
        sfx(0)
    end

    -- update charlie jumping
    if charlie.jumping then
        charlie.y = charlie.y + charlie.jumpspeed
        charlie.jumpspeed = charlie.jumpspeed + charlie.gravity

        -- check if charlie has landed
        if charlie.y >= 110 then
            charlie.y = 110
            charlie.jumping = false
            charlie.jumpspeed = -4
        end
    end

    -- update flaming hoops
    hooptimer = hooptimer - 1
    if hooptimer <= 0 then
        add(hoops, createhoop(charlie.x + screen_width, 100))  -- spawn new hoop
        hooptimer = hoopinterval
    end

    for i = #hoops, 1, -1 do
        local hoop = hoops[i]
        hoop.x = hoop.x - hoopspeed


        -- despawn hoop if off-screen
        if abs(hoop.x - charlie.x) > screen_width  then
            del(hoops, hoop)
        end

        -- check collision with charlie
        if checkcollision(charlie, hoop) then
            sfx(1)
            del(hoops, hoop)
            lives = lives - 1
        end
    end

    -- update camera
    local right_moving_charlie = 8*5
    local left_moving_charlie = 8

    if charlie.x - camera.x > right_moving_charlie then
        camera.x = charlie.x - right_moving_charlie
    elseif charlie.x - camera.x < left_moving_charlie then
        camera.x = charlie.x - left_moving_charlie
    end
    -- check game over
    if lives <= 0 then
        gamestate = "gameover"
    end
end

function updategameoverscreen()
    if btnp(4) then  -- z key
        initgame()
    end
end

-- draw background
function drawbackground()
    rectfill(0,0,screen_width,screen_height,6)
    for i = 0, screen_width / 10 do
        local x = i * 8*4 - (camera.x % (8*4))
        line(x, 0, x, screen_height, 7)
    end
end

-- draw function
function _draw()
    cls()

    if gamestate == "title" then
        print("press z to start", 40, 50, 7)
    elseif gamestate == "liongame" then
        drawliongame()
    elseif gamestate == "gameover" then
        print("game over", 50, 50, 8)
        print("press z to restart", 40, 70, 7)
    end

    print("camera " .. camera.x, 60, 30, 8)
    print("charlie " .. charlie.x, 60, 40, 8)
    print("hoop count " .. count(hoops), 60, 20, 8)

end

function drawliongame()
    -- draw background
    drawbackground()

    -- draw charlie
    spr(charlie.sprite, charlie.x - camera.x, charlie.y, 2, 2)

    sprhoop = 3
    -- draw flaming hoops
    for _, hoop in ipairs(hoops) do
        spr(sprites[sprhoop].id, hoop.x - camera.x, hoop.y)
    end

    -- display score and lives
    print("score: " .. score, 0, 0, 7)
    print("lives: " .. lives, 60, 0, 7)
end
-->8
-- test

__gfx__
00000000000000000000000000098000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000008000000000000a909000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000008870000000000089090a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000077800000a00000909800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000cc80000000a900a0909000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000ccc80009999990008909a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000c0000000909000000909800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000909000000090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ccc08888800000000000000000cdddc00000000000880000000000000000000000880000000000000000000000000000000000000000000000000000
00000000ccc888888880880000000000ddccdddcc00a00000088011c00000000000000000088011c000000000000000000000000000000000000000000000000
00000000cc888888888880000aa00dccdddccdddccaa0a000001cc11cc000000000000000001cc11cc0000000000000000000000000000000000000000000000
000000000088888888ffff00aaa8dddccdddccdffffaa00000011cc1fff000000000000000011cc1fff000000000000000000000000000000000000000000000
00000000008888888ff0f000aa88000dccdddffff77f0000000c11fff5f8800000000000000c11fff0f880000000000000000000000000000000000000000000
0000000000888888fff0f000088000000ccdfffff77cf0000000cffffff88000000000000000cffffff880000000000000000000000000000000000000000000
0000000000088888fff0f0000000000000cffffff77cf0000000fffffff00000000000000000fffffff000000000000000000000000000000000000000000000
000000000008888ffffff8800000000000afffcfff7f880000000fffff0000000000000000000fffff0000000000000000000000000000000000000000000000
00000000000fff8ffffff88000000000aaaffcccfff8870800070999900000000000000000070999900000000000000000000000000000000000000000000000
000000000000fffffff0f000000007700afffcccffff880007779999900000000000000007779999900000000000000000000000000000000000000000000000
000000000000000fffff00000077777700ffffcff22f000000099999990000000000000000099999990000000000000000000000000000000000000000000000
00000000000000000000000000077777600fffff22f0000000004999990000000000000000004999990444400000000000000000000000000000000000000000
000000000000000000000000000007776ddd2fffff00000000049999990000000000000000049999944444444000000000000000000000000000000000000000
000000000000000000000000000000066dddd8220000000000049949900000000000000000049949444aaaaa4400000000000000000000000000000000000000
0000000000000000000000000000000022dd882200000000000330bb0000000000000000000330bb44aa4a4aa400000000000000000000000000000000000000
0000000000000000000000000000000022222822000000000003333bbb000000000000000003333b44aaaaaaa400000000000000000000000000000000000000
00000000000000000000000000000008822228220000000000000000000000000000000000000000444a444a4400000000000000000000000000000000000000
000000000000000000000000000000088882282200000000000000000000000000000000000000004440a0a04400000000000000000000000000000000000000
00000000000000000000000000000008888888cc0000000000000000000000000000000000000000044000004000000000000000000000000000000000000000
00000000000000000000000000000008888888c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002888888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000ff288888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000ee3f0088ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000e333033fff00bbbd00000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000333333bbbbbbbd7d0000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000003333bdbbbbdddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000
